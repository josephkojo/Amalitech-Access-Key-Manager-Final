import React, { useState, useEffect } from "react";
import UserService from "../UserService";
import { useParams } from "react-router-dom";
import { Card, Button, Row, Col, Spinner } from "react-bootstrap"; // Import Spinner for loading feedback
import { ToastContainer, toast } from 'react-toastify'; // Import ToastContainer and toast from react-toastify
import 'react-toastify/dist/ReactToastify.css';

const User = () => {
  const { userId } = useParams();
  const [accessKeys, setAccessKeys] = useState([]);
  const [loading, setLoading] = useState(false); 

  useEffect(() => {
    const fetchData = async () => {
      try {
        setLoading(true); 
        const token = localStorage.getItem('token');
        const keysResponse = await UserService.getKeysGeneratedByUser(userId, token);
        setAccessKeys(keysResponse);
        await UserService.updateKeyDetails(userId, token);
        
      } catch (error) {
        console.error('Error fetching or updating keys:', error);
        toast.error("Failed to fetch or update keys");
      } finally {
        setLoading(false); 
      }
    };

    fetchData();

  }, [userId]);

  const handleClick = async () => {
    try {
      setLoading(true); 
      const token = localStorage.getItem('token');
      const response = await UserService.generateKeyByUser(userId, token);
      if (!response) {
        toast.success("Key generated successfully");
      } else {
        toast.error("Active key already exists");
      }
    } catch (error) {
      console.error('Error generating key:', error);
      toast.error("Active key already exists");
    } finally {
      setLoading(false); 
    }
  };

  return (
    <div className="container mt-5">
      <ToastContainer /> {/* Add ToastContainer component here */}
      <h2 className="text-center mb-4" style={{ color: "#333", fontFamily: "Arial, sans-serif" }}>Keys Generated By School</h2>
      <div className="d-flex justify-content-end mb-3">
        <Button variant="success" onClick={handleClick} disabled={loading}>
          {loading ? <Spinner animation="border" size="sm" /> : "Generate New Access Key"}
        </Button>
      </div>
      <Row xs={1} md={3} className="g-4">
        {accessKeys.map((item) => (
          <Col key={item.id}>
            <Card style={{ height: "100%" }}>
              <Card.Body>
                <Card.Title style={{ fontSize: "1.2rem", marginBottom: "10px" }}>Key Identifier: {item.keys}</Card.Title>
                <Card.Text>
                  <strong>Status:</strong>{" "}
                  <span style={{ color: item.status === 'ACTIVE' ? 'green' : 'red' }}>
                    {item.status}
                  </span>
                </Card.Text>
                <Card.Text>
                  <strong>Date of Procurement:</strong>{" "}
                  <span>{item.dateOfProcurement}</span>
                </Card.Text>
                <Card.Text>
                  <strong>Expiry Date:</strong> <span>{item.expiryDate}</span>
                </Card.Text>
                <Card.Text>
                  <strong>ID:</strong> <span>{item.id}</span>
                </Card.Text>
                <Button variant="primary" href="#" className="mt-2">Details</Button>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </div>
  );
}

export default User;
